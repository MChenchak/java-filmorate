CREATE TABLE IF NOT EXISTS PUBLIC."user" (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    name VARCHAR NOT NULL ,
    login VARCHAR NOT NULL ,
    email VARCHAR NOT NULL ,
    birthday DATE ,
    CONSTRAINT user_pk PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS PUBLIC."friend" (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    friend_one BIGINT NOT NULL ,
    friend_two BIGINT NOT NULL ,
    confirmed BOOLEAN NOT NULL ,
    CONSTRAINT friend_pk PRIMARY KEY (id),
    CONSTRAINT friend_one_fk FOREIGN KEY (friend_one) REFERENCES PUBLIC."user" (id),
    CONSTRAINT friend_two_fk FOREIGN KEY (friend_two) REFERENCES PUBLIC."user" (id)
);

CREATE TABLE IF NOT EXISTS PUBLIC."rating" (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    title VARCHAR NOT NULL ,
    CONSTRAINT rating_pk PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS PUBLIC."film" (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    title VARCHAR NOT NULL ,
    description VARCHAR NOT NULL ,
    release_date DATE NOT NULL ,
    duration INTEGER NOT NULL ,
    rating BIGINT NOT NULL,
    CONSTRAINT film_pk PRIMARY KEY (id),
    CONSTRAINT rating_fk FOREIGN KEY (rating) REFERENCES PUBLIC."rating" (id)
);

CREATE TABLE IF NOT EXISTS PUBLIC."genre" (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    title VARCHAR NOT NULL ,
    CONSTRAINT genre_pk PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS PUBLIC."film_genre" (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    film BIGINT NOT NULL ,
    genre BIGINT NOT NULL ,
    CONSTRAINT film_genre_pk PRIMARY KEY (id),
    CONSTRAINT film_fk FOREIGN KEY (film) REFERENCES PUBLIC."film" (id),
    CONSTRAINT genre_fk FOREIGN KEY (genre) REFERENCES PUBLIC."genre" (id)
);

CREATE TABLE IF NOT EXISTS PUBLIC."like" (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    user_id BIGINT NOT NULL ,
    film_id BIGINT NOT NULL ,
    CONSTRAINT like_pk PRIMARY KEY (id),
    CONSTRAINT user_id_fk FOREIGN KEY (user_id) REFERENCES PUBLIC."user" (id),
    CONSTRAINT film_id_fk FOREIGN KEY (film_id) REFERENCES PUBLIC."film" (id)
 );



